{"version":3,"file":"admob.js","sources":["../node_modules/lodash-es/isUndefined.js","../src/js/utils.js","../src/js/banner.js","../src/js/interstitial.js","../src/js/reward-video.js","../src/js/admob.js"],"sourcesContent":["/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","import corodvaExec from 'cordova/exec'\nimport isUndefined from 'lodash/isUndefined'\n\n/**\n * Base config object.\n * @typedef {Object} BaseConfig\n * @property {string} [id=TESTING_AD_ID] - Ad Unit ID\n * @property {boolean} [isTesting=false] - Receiving test ad\n * @property {boolean} [autoShow=false] - Auto show ad when loaded\n *\n * @property {boolean|null} [forChild=null]\n * Child-directed setting.\n * Default is not calling `tagForChildDirectedTreatment`.\n * Set to `true` for `tagForChildDirectedTreatment(true)`.\n * Set to `false` for `tagForChildDirectedTreatment(false)`.\n * @see https://firebase.google.com/docs/admob/android/targeting#child-directed_setting\n *\n * @property {boolean|null} [forFamily=null]\n * Designed for Families setting.\n * Android-only.\n * Default is not calling `setIsDesignedForFamilies`.\n * Set to `true` for `setIsDesignedForFamilies(true)`.\n * Set to `false` for `setIsDesignedForFamilies(false)`.\n * @see https://firebase.google.com/docs/admob/android/targeting#designed_for_families_setting\n *\n * @property {Array<number>|null} [location=null]\n * Location targeting.\n * It accept an array in the form of `[latitude, longitude]`.\n * Android-only.\n * Default is not calling `setLatitude` and `setLongitude`.\n */\n\n/**\n * @ignore\n */\nexport function exec(method, args) {\n  return new Promise((resolve, reject) => {\n    corodvaExec(resolve, reject, 'AdMob', method, args)\n  })\n}\n\n/**\n * @ignore\n */\nexport function isFunction(x) {\n  return typeof x === 'function'\n}\n\nfunction isString(x) {\n  return typeof x === 'string'\n}\n\n/**\n * @ignore\n */\nexport function wrapCallbacks(p, successCallback, failureCallback) {\n  if (isFunction(successCallback)) {\n    p = p.then(successCallback) // eslint-disable-line no-param-reassign\n  }\n  if (isFunction(failureCallback)) {\n    p = p.catch(failureCallback) // eslint-disable-line no-param-reassign\n  }\n  return p\n}\n\nfunction boolean2string(x) {\n  if (x === null) {\n    return ''\n  }\n  if (x === true) {\n    return 'yes'\n  }\n  if (x === false) {\n    return 'no'\n  }\n  return x\n}\n\n/**\n * @ignore\n */\nexport function translateOptions(options) {\n  /* eslint-disable no-console */\n  const opts = {}\n  if (!isUndefined(options.forChild)) {\n    opts.forChild = boolean2string(options.forChild)\n    if (isString(options.forChild)) {\n      console.warn(\n        '`forChild` will not accept string in future, pass boolean instead',\n      )\n    }\n  }\n  if (!isUndefined(options.forFamily)) {\n    opts.forFamily = boolean2string(options.forFamily)\n    if (isString(options.forFamily)) {\n      console.warn(\n        '`forFamily` will not accept string in future, pass boolean instead',\n      )\n    }\n  }\n  /* eslint-enable no-console */\n  return {\n    ...options,\n    ...opts,\n    // TODO update native implementation using `size`\n    adSize: options.size,\n  }\n}\n\n/**\n * @ignore\n */\nexport function buildEvents(adType, eventKeys) {\n  return eventKeys.reduce((acc, eventKey) => {\n    acc[eventKey] = `admob.${adType}.events.${eventKey}`\n    return acc\n  }, {})\n}\n","import { buildEvents, exec, translateOptions } from './utils'\n\n/**\n * Banner config object.\n * @typedef {BaseConfig} BannerConfig\n * @property {boolean} [bannerAtTop=false] - set to true, to put banner at top\n * @property {boolean} [overlap=true] -\n * set to true, to allow banner overlap webview\n * @property {boolean} [offsetTopBar=false] -\n * set to true to avoid ios7 status bar overlap\n * @property {string} [size=SMART_BANNER] - {@link BANNER_SIZE}\n */\n\nconst events = buildEvents('banner', [\n  'LOAD',\n  'LOAD_FAIL',\n  'OPEN',\n  'CLOSE',\n  'EXIT_APP',\n])\n\n/**\n * @typedef {Object} BANNER_SIZE\n * @property {string} BANNER - BANNER\n * @property {string} IAB_BANNER - IAB_BANNER\n * @property {string} IAB_LEADERBOARD - IAB_LEADERBOARD\n * @property {string} IAB_MRECT - IAB_MRECT\n * @property {string} LARGE_BANNER - LARGE_BANNER\n * @property {string} SMART_BANNER - SMART_BANNER\n * @property {string} FLUID - FLUID\n */\n/**\n * @constant\n * @type {Object}\n */\nconst sizes = {\n  BANNER: 'BANNER',\n  IAB_BANNER: 'IAB_BANNER',\n  IAB_LEADERBOARD: 'IAB_LEADERBOARD',\n  IAB_MRECT: 'IAB_MRECT',\n  LARGE_BANNER: 'LARGE_BANNER',\n  SMART_BANNER: 'SMART_BANNER',\n  FLUID: 'FLUID',\n  // android-only\n  FULL_BANNER: 'FULL_BANNER',\n  LEADERBOARD: 'LEADERBOARD',\n  MEDIUM_RECTANGLE: 'MEDIUM_RECTANGLE',\n  SEARCH: 'SEARCH',\n  WIDE_SKYSCRAPER: 'WIDE_SKYSCRAPER',\n}\n\n/**\n * @protected\n * @desc\n * See usage in {@link banner}.\n */\nclass Banner {\n  static events = events\n\n  /**\n   * Banner sizes\n   * @type {BANNER_SIZE}\n   */\n  static sizes = sizes\n\n  /**\n   * @protected\n   * @param {BannerConfig} opts - Initial config.\n   */\n  constructor(opts) {\n    this.config({\n      size: sizes.SMART_BANNER,\n      ...opts,\n    })\n  }\n\n  /**\n   * Update config.\n   *\n   * @param {BannerConfig} opts - New config.\n   * @returns {BannerConfig} Updated config.\n   */\n  config(opts) {\n    this._config = {\n      ...this._config,\n      ...opts,\n    }\n    return this._config\n  }\n\n  /**\n   * Create banner.\n   *\n   * @returns {Promise} Excutaion result promise.\n   */\n  prepare() {\n    const options = {\n      publisherId: this._config.id,\n      ...this._config,\n    }\n    delete options.id\n    return exec('createBannerView', [translateOptions(options)])\n  }\n\n  /**\n   * Show the banner.\n   *\n   * @returns {Promise} Excutaion result promise.\n   */\n  show() {\n    return exec('showAd', [true])\n  }\n\n  /**\n   * Hide the banner.\n   *\n   * @returns {Promise} Excutaion result promise.\n   */\n  hide() {\n    return exec('showAd', [false])\n  }\n\n  /**\n   * Remove the banner.\n   *\n   * @returns {Promise} Excutaion result promise.\n   */\n  remove() {\n    return exec('destroyBannerView', [])\n  }\n}\n\nexport { Banner }\n","import { buildEvents, exec, translateOptions } from './utils'\n\n/**\n * Interstitial config object.\n * @typedef {BaseConfig} InterstitialConfig\n */\n\nconst events = buildEvents('interstitial', [\n  'LOAD',\n  'LOAD_FAIL',\n  'OPEN',\n  'CLOSE',\n  'EXIT_APP',\n])\n\n/**\n * @protected\n * @desc\n * See usage in {@link interstitial}.\n */\nclass Interstitial {\n  static events = events\n\n  /**\n   * @protected\n   * @param {InterstitialConfig} opts - Initial config.\n   */\n  constructor(opts) {\n    this.config({\n      ...opts,\n    })\n  }\n\n  /**\n   * Update config.\n   *\n   * @param {InterstitialConfig} opts - New config.\n   * @returns {InterstitialConfig} Updated config.\n   */\n  config(opts) {\n    this._config = {\n      ...this._config,\n      ...opts,\n    }\n    return this._config\n  }\n\n  /**\n   * @returns {Promise} Excutaion result promise.\n   */\n  prepare() {\n    const options = {\n      interstitialAdId: this._config.id,\n      ...this._config,\n    }\n    delete options.id\n    return exec('prepareInterstitial', [translateOptions(options)])\n  }\n\n  /**\n   * @returns {Promise} Excutaion result promise.\n   */\n  show() {\n    return exec('showInterstitialAd', [true])\n  }\n\n  /**\n   * @returns {Promise} Excutaion result promise.\n   */\n  isReady() {\n    return exec('isInterstitialReady', [])\n  }\n}\n\nexport { Interstitial }\n","import { buildEvents, exec, translateOptions } from './utils'\n\n/**\n * Reward Video config object.\n * @typedef {BaseConfig} RewardVideoConfig\n */\n\nconst events = buildEvents('rewardvideo', [\n  'LOAD',\n  'LOAD_FAIL',\n  'OPEN',\n  'CLOSE',\n  'EXIT_APP',\n  'START',\n  'REWARD',\n])\n\n/**\n * See usage in {@link rewardvideo}.\n * @protected\n */\nclass RewardVideo {\n  static events = events\n\n  /**\n   * @protected\n   * @param {RewardVideoConfig} opts - Initial config.\n   */\n  constructor(opts) {\n    this.config({\n      ...opts,\n    })\n  }\n\n  /**\n   * Update config.\n   *\n   * @param {RewardVideoConfig} opts - New config.\n   * @returns {RewardVideoConfig} Updated config.\n   */\n  config(opts) {\n    this._config = {\n      ...this._config,\n      ...opts,\n    }\n    return this._config\n  }\n\n  /**\n   * @returns {Promise} Excutaion result promise.\n   */\n  prepare() {\n    const options = {\n      rewardVideoId: this._config.id,\n      ...this._config,\n    }\n    delete options.id\n    return exec('createRewardVideo', [translateOptions(options)])\n  }\n\n  /**\n   * @returns {Promise} Excutaion result promise.\n   */\n  show() {\n    return exec('showRewardVideo', [true])\n  }\n\n  /**\n   * @returns {Promise} Excutaion result promise.\n   */\n  isReady() {\n    return exec('isRewardVideoReady', [])\n  }\n}\n\nexport { RewardVideo }\n","import exec from 'cordova/exec'\n\nimport { wrapCallbacks, translateOptions } from './utils'\n\nimport { Banner } from './banner'\nimport { Interstitial } from './interstitial'\nimport { RewardVideo } from './reward-video'\n\n/**\n * @type {Banner}\n * @since 0.6\n * @emits {admob.banner.events.LOAD}\n * @emits {admob.banner.events.LOAD_FAIL}\n * @emits {admob.banner.events.OPEN}\n * @emits {admob.banner.events.CLOSE}\n * @emits {admob.banner.events.EXIT_APP}\n * @example\n * admob.banner.config({\n *  id: 'ca-app-pub-xxx/xxx',\n * })\n *\n * // Create banner\n * admob.banner.prepare()\n *\n * // Show the banner\n * admob.banner.show()\n *\n * // Hide the banner\n * admob.banner.hide()\n *\n * // Remove the banner\n * admob.banner.remove()\n */\nexport const banner = new Banner()\n\n/**\n * @type {Interstitial}\n * @since 0.6\n * @emits {admob.interstitial.events.LOAD}\n * @emits {admob.interstitial.events.LOAD_FAIL}\n * @emits {admob.interstitial.events.OPEN}\n * @emits {admob.interstitial.events.CLOSE}\n * @emits {admob.interstitial.events.EXIT_APP}\n * @example\n * admob.interstitial.config({\n *  id: 'ca-app-pub-xxx/xxx',\n * })\n *\n * admob.interstitial.prepare()\n *\n * admob.interstitial.show()\n */\nexport const interstitial = new Interstitial()\n\n/**\n * @external {cordova-admob-mediation} https://github.com/rehy/cordova-admob-mediation\n */\n/**\n * Reward video requires mediation SDK to be installed,\n * see {@link cordova-admob-mediation} for list of supported networks.\n * @type {RewardVideo}\n * @since 0.6\n * @emits {admob.rewardvideo.events.LOAD}\n * @emits {admob.rewardvideo.events.LOAD_FAIL}\n * @emits {admob.rewardvideo.events.OPEN}\n * @emits {admob.rewardvideo.events.CLOSE}\n * @emits {admob.rewardvideo.events.EXIT_APP}\n * @emits {admob.rewardvideo.events.START}\n * @emits {admob.rewardvideo.events.REWARD}\n * @example\n * admob.rewardvideo.config({\n *  id: 'ca-app-pub-xxx/xxx',\n * })\n *\n * admob.rewardvideo.prepare()\n *\n * admob.rewardvideo.show()\n */\nexport const rewardvideo = new RewardVideo()\n\n// Old APIs\n\n/**\n * Set options.\n *\n * @deprecated since version 0.6\n * @param {Object} options\n * @param {string} options.publisherId\n * @param {string} options.interstitialAdId\n *\n * @param {boolean} [options.bannerAtTop=false]\n * Set to true, to put banner at top.\n * @param {boolean} [options.overlap=true]\n * Set to true, to allow banner overlap webview.\n * @param {boolean} [options.offsetTopBar=false]\n * Set to true to avoid ios7 status bar overlap.\n * @param {boolean} [options.isTesting=false]    Receiving test ad.\n * @param {boolean} [options.autoShow=false]\n * Auto show interstitial ad when loaded.\n *\n * @param {boolean|null} [options.forChild=null]\n * Default is not calling `tagForChildDirectedTreatment`.\n * Set to \"true\" for `tagForChildDirectedTreatment(true)`.\n * Set to \"false\" for `tagForChildDirectedTreatment(false)`.\n *\n * @param {boolean|null} [options.forFamily=null]\n * Android-only.\n * Default is not calling `setIsDesignedForFamilies`.\n * Set to \"true\" for `setIsDesignedForFamilies(true)`.\n * Set to \"false\" for `setIsDesignedForFamilies(false)`.\n *\n * @param {function()} [successCallback]\n * @param {function()} [failureCallback]\n */\nexport function setOptions(options, successCallback, failureCallback) {\n  if (typeof options === 'object') {\n    Object.keys(options).forEach(k => {\n      switch (k) {\n        case 'publisherId':\n          banner._config.id = options[k]\n          break\n        case 'bannerAtTop':\n        case 'overlap':\n        case 'offsetTopBar':\n          banner._config[k] = options[k]\n          break\n        case 'interstitialAdId':\n          interstitial._config.id = options[k]\n          break\n        case 'rewardVideoId':\n          rewardvideo._config.id = options[k]\n          break\n        case 'isTesting':\n        case 'autoShow':\n          banner._config[k] = options[k]\n          interstitial._config[k] = options[k]\n          rewardvideo._config[k] = options[k]\n          break\n        default:\n      }\n    })\n    exec(successCallback, failureCallback, 'AdMob', 'setOptions', [\n      translateOptions(options),\n    ])\n  } else if (typeof failureCallback === 'function') {\n    failureCallback('options should be specified.')\n  }\n}\n\n/**\n * Ad sizes.\n * @constant\n * @type {BANNER_SIZE}\n * @deprecated since version 0.6\n */\nexport const AD_SIZE = Banner.sizes\n\n/* eslint-disable no-console */\n/**\n * @deprecated since version 0.6\n */\nexport function createBannerView(\n  options = {},\n  successCallback,\n  failureCallback,\n) {\n  console.warn('Use admob.banner.prepare() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'createBannerView', [\n    translateOptions(options),\n  ])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function destroyBannerView(options, successCallback, failureCallback) {\n  console.warn('Use admob.banner.remove() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'destroyBannerView', [])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function showAd(show = true, successCallback, failureCallback) {\n  console.warn('Use admob.banner.show() and admob.banner.hide() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'showAd', [show])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function createInterstitialView(\n  options,\n  successCallback,\n  failureCallback,\n) {\n  console.warn(\n    'Use admob.interstitial.prepare() instead, it will do both createInterstitialView() and requestInterstitialAd().',\n  )\n  exec(successCallback, failureCallback, 'AdMob', 'createInterstitialView', [\n    translateOptions(options),\n  ])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function requestInterstitialAd(\n  options = {},\n  successCallback,\n  failureCallback,\n) {\n  console.warn(\n    'Use admob.interstitial.prepare() instead, it will do both createInterstitialView() and requestInterstitialAd().',\n  )\n  exec(successCallback, failureCallback, 'AdMob', 'requestInterstitialAd', [\n    translateOptions(options),\n  ])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function prepareInterstitial(\n  options = {},\n  successCallback,\n  failureCallback,\n) {\n  console.warn('Use admob.interstitial.prepare() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'prepareInterstitial', [\n    translateOptions(options),\n  ])\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function showInterstitial(successCallback, failureCallback) {\n  console.warn('Use admob.interstitial.show() instead.')\n  wrapCallbacks(interstitial.show(), successCallback, failureCallback)\n}\n\n/**\n * @deprecated since version 0.6\n */\nexport function showInterstitialAd(\n  show = true,\n  successCallback,\n  failureCallback,\n) {\n  console.warn('Use admob.interstitial.show() instead.')\n  exec(successCallback, failureCallback, 'AdMob', 'showInterstitialAd', [show])\n}\n/* eslint-enable no-console */\n"],"names":["isUndefined","value","undefined","exec","method","args","Promise","resolve","reject","isFunction","x","isString","wrapCallbacks","p","successCallback","failureCallback","then","boolean2string","translateOptions","options","opts","forChild","warn","forFamily","size","buildEvents","adType","eventKeys","reduce","acc","eventKey","events","sizes","Banner","config","SMART_BANNER","_config","this","id","Interstitial","RewardVideo","banner","interstitial","rewardvideo","setOptions","keys","forEach","k","AD_SIZE","createBannerView","destroyBannerView","showAd","show","createInterstitialView","requestInterstitialAd","prepareInterstitial","showInterstitial","showInterstitialAd"],"mappings":"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"}